# Generated by Django 2.2.5 on 2020-02-12 16:22

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone

#REFERENCES THAT HELP ME ON THE RESOLUTION OF FK PROBLEMS IN CUSTOM MODEL APPROACH, BECAUSE THE CUSTOM MODEL APPROACH (OVERRIDE USER) NEEDS TO BE INSIDE FIRST MIGRATION, AND IN MY CASE IT'S NOT HAPPEN
#https://stackoverflow.com/questions/44014361/what-command-can-allow-me-to-recreate-the-django-admin-log-table
#https://code.djangoproject.com/ticket/23297
'''
    STEPS:
        1 - DROP TABLE PROBLEMATIC ON PGADMIN --> IN MY CASE DJANGO_LOG_ADMIN
        2 - DELETE MIGRATIONS OF PROBLEMATIC APP --> MY CASE USERS
        3 - RUN MIGRATE COMMAND
'''

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userType', models.CharField(choices=[('D', 'DATA_SCIENTIST'), ('A', 'ADMIN'), ('H', 'HEALTH_CARE')], max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
